{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a7ce3b59",
   "metadata": {},
   "source": [
    "## Week1 / ch2 데이터 : 타입,값,변수,이름"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6eb7bbb1",
   "metadata": {},
   "outputs": [],
   "source": [
    "- 프로그래밍이란 : 프로그래밍 언어를 사용하여 프로그램을 개발하는 것\n",
    "- 프로그램 language : 프로그램을 개발할 때 사용하는 도구, 인간이 원하는 것을 컴퓨터에게 명령할 때 사용하는 컴퓨터가 이해할 수 있는 언어"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0ae6a8b",
   "metadata": {},
   "source": [
    "#  변수"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "206c5c60",
   "metadata": {},
   "outputs": [],
   "source": [
    "- 변수 (variable) : 특정 값을 저장하는 공간 \n",
    "- 변수 : a , 값(value) : 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f65b4451",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = 2\n",
    "# 2라는 값을 a에 할당했다 (변수에 값을 넣는 과정)\n",
    "# a는 2다.\n",
    "# 같다는 == 사용"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8185f87c",
   "metadata": {},
   "source": [
    "# 자료형 type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "087bba28",
   "metadata": {},
   "outputs": [],
   "source": [
    "- 자료형 : 데이터의 형태\n",
    "- int (숫자형) : 정수\n",
    "- float : 실수 # floating point number 부동소수점 \n",
    "- str (문자형)\n",
    "- bool "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f533775b",
   "metadata": {},
   "source": [
    "# 할당"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea75922f",
   "metadata": {},
   "outputs": [],
   "source": [
    "- = 사용\n",
    "- 수학에서는 '양변이 같다'라는 의미이지만, 프로그래밍에서는 '할당한다'\n",
    "- 오른쪽 값을 왼쪽에 할당\n",
    "1. 오른쪽에 있는 모든 것은 값을 가져야한다. (초기화 해야 한다.)\n",
    "2. 같은 변수에 다른 값을 넣을 수 있다.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19e6fae9",
   "metadata": {},
   "source": [
    "# 변수명 정하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c7877d45",
   "metadata": {},
   "outputs": [],
   "source": [
    "- 의미있는 이름으로 선언\n",
    "- 소,대문자,숫자,언더바 사용\n",
    "- 숫자로 시작할 수 없음\n",
    "- 예약어 선언 불가\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e6bb7d4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Here is a list of the Python keywords.  Enter any keyword to get more help.\n",
      "\n",
      "False               break               for                 not\n",
      "None                class               from                or\n",
      "True                continue            global              pass\n",
      "__peg_parser__      def                 if                  raise\n",
      "and                 del                 import              return\n",
      "as                  elif                in                  try\n",
      "assert              else                is                  while\n",
      "async               except              lambda              with\n",
      "await               finally             nonlocal            yield\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# 예약어 불러내기 \n",
    "help('keywords')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ca4c97bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 주의\n",
    "- 언더바로 시작하는 변수명\n",
    "- 더블 언더바\n",
    "- 대문자 시작\n",
    "- 전체 대문자"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6037b29c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#\n",
    "a!=b : 다르다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "18656fc2",
   "metadata": {},
   "outputs": [],
   "source": [
    "num = 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7435f4ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n"
     ]
    }
   ],
   "source": [
    "print (num)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "48cefa0a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(num)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2e2592bb",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
